// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package soapenvelope12

case class Envelope(Header: Option[soapenvelope12.Header],
  Body: soapenvelope12.Body,
  attributes: Map[String, scalaxb.DataRecord[Any]])


/** 
	  Elements replacing the wildcard MUST be namespace qualified, but can be in the targetNamespace
	  
*/
case class Header(any: Seq[scalaxb.DataRecord[Any]],
  attributes: Map[String, scalaxb.DataRecord[Any]])


case class Body(any: Seq[scalaxb.DataRecord[Any]],
  attributes: Map[String, scalaxb.DataRecord[Any]])


/** 
	    Fault reporting structure
	  
*/
case class Fault(Code: soapenvelope12.Faultcode,
  Reason: soapenvelope12.Faultreason,
  Node: Option[java.net.URI],
  Role: Option[java.net.URI],
  Detail: Option[soapenvelope12.Detail])


case class Faultreason(Text: soapenvelope12.Reasontext*)


case class Reasontext(value: String,
  xmllang: String)


case class Faultcode(Value: soapenvelope12.FaultcodeEnum,
  Subcode: Option[soapenvelope12.Subcode])

trait FaultcodeEnum

object FaultcodeEnum {
  def fromString(value: String): FaultcodeEnum = value match {
    case "tns:DataEncodingUnknown" => TnsDataEncodingUnknown
    case "tns:MustUnderstand" => TnsMustUnderstand
    case "tns:Receiver" => TnsReceiver
    case "tns:Sender" => TnsSender
    case "tns:VersionMismatch" => TnsVersionMismatch

  }
}

case object TnsDataEncodingUnknown extends FaultcodeEnum { override def toString = "tns:DataEncodingUnknown" }
case object TnsMustUnderstand extends FaultcodeEnum { override def toString = "tns:MustUnderstand" }
case object TnsReceiver extends FaultcodeEnum { override def toString = "tns:Receiver" }
case object TnsSender extends FaultcodeEnum { override def toString = "tns:Sender" }
case object TnsVersionMismatch extends FaultcodeEnum { override def toString = "tns:VersionMismatch" }


case class Subcode(Value: javax.xml.namespace.QName,
  Subcode: Option[soapenvelope12.Subcode])


case class Detail(any: Seq[scalaxb.DataRecord[Any]],
  attributes: Map[String, scalaxb.DataRecord[Any]])


case class NotUnderstoodType(qname: javax.xml.namespace.QName)


case class SupportedEnvType(qname: javax.xml.namespace.QName)


case class UpgradeType(SupportedEnvelope: soapenvelope12.SupportedEnvType*)

